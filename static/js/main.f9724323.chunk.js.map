{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","reverseParameter","setReverseParameter","default","sortParameter","setSortParameter","visibleGoods","goods","copyGoods","reverse","sort","good1","good2","length","alphabet","localeCompare","getSortedGoods","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0EAbQC,EAA4B,CACvC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,gBAAAA,E,oBAAAA,I,sBAAAA,M,KA2CE,IAAME,EAAgB,WAC3B,MAAgDC,mBAAS,GAAzD,mBAAOC,EAAP,KAAyBC,EAAzB,KACA,EAA0CF,mBAASH,EAASM,SAA5D,mBAAOC,EAAP,KAAsBC,EAAtB,KAEMC,EAzCR,SACEC,EACAH,EACAH,GAEA,IAAMO,EAAS,YAAOD,GA6BtB,OA3ByB,IAArBN,GACFO,EAAUC,UAGRL,GACFI,EAAUE,MAAK,SAACC,EAAOC,GACrB,OAAQR,GACN,KAAKP,EAASgB,OACZ,OAAIZ,EACKW,EAAMC,OAASF,EAAME,OAGvBF,EAAME,OAASD,EAAMC,OAE9B,KAAKhB,EAASiB,SACZ,OAAIb,EACKW,EAAMG,cAAcJ,GAGtBA,EAAMI,cAAcH,GAE7B,QACE,OAAOf,EAASM,YAKjBK,EAQHQ,CAAelB,EAAiBM,EAAeH,GAiBnD,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMb,EAAiBR,EAASiB,WACzCK,KAAK,SACLF,UAAWG,IAAG,iBAAkB,CAC9B,WAAYhB,IAAkBP,EAASiB,WAJ3C,iCAUA,wBACEI,QAAS,kBAAMb,EAAiBR,EAASgB,SACzCM,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CACjC,WAAYhB,IAAkBP,EAASgB,SAJ3C,4BAUA,wBACEK,QAlCQ,WACVjB,GACFC,EAAoB,GAGjBD,GACHC,EAAoB,IA6BhBiB,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CACjC,WAAiC,IAArBnB,IAJhB,sBASEG,GAAiBH,IACjB,mCACE,wBACEiB,QAlDE,WACZb,EAAiBR,EAASM,SAC1BD,EAAoB,IAiDViB,KAAK,SACLF,UAAU,4BAHZ,wBAWN,6BACGX,EAAae,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YClIjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f9724323.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  length = 'length',\n  alphabet = 'alphabet',\n  default = 0,\n}\n\nfunction getSortedGoods(\n  goods: string[],\n  sortParameter: SortType,\n  reverseParameter: number,\n): string[] {\n  const copyGoods = [...goods];\n\n  if (reverseParameter === 1) {\n    copyGoods.reverse();\n  }\n\n  if (sortParameter) {\n    copyGoods.sort((good1, good2) => {\n      switch (sortParameter) {\n        case SortType.length:\n          if (reverseParameter) {\n            return good2.length - good1.length;\n          }\n\n          return good1.length - good2.length;\n\n        case SortType.alphabet:\n          if (reverseParameter) {\n            return good2.localeCompare(good1);\n          }\n\n          return good1.localeCompare(good2);\n\n        default:\n          return SortType.default;\n      }\n    });\n  }\n\n  return copyGoods;\n}\n\nexport const App: React.FC = () => {\n  const [reverseParameter, setReverseParameter] = useState(0);\n  const [sortParameter, setSortParameter] = useState(SortType.default);\n\n  const visibleGoods\n    = getSortedGoods(goodsFromServer, sortParameter, reverseParameter);\n\n  const reset = () => {\n    setSortParameter(SortType.default);\n    setReverseParameter(0);\n  };\n\n  const reverse = () => {\n    if (reverseParameter) {\n      setReverseParameter(0);\n    }\n\n    if (!reverseParameter) {\n      setReverseParameter(1);\n    }\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortParameter(SortType.alphabet)}\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortParameter !== SortType.alphabet,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortParameter(SortType.length)}\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortParameter !== SortType.length,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={reverse}\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': reverseParameter === 0,\n          })}\n        >\n          Reverse\n        </button>\n        {(sortParameter || reverseParameter) && (\n          <>\n            <button\n              onClick={reset}\n              type=\"button\"\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          </>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
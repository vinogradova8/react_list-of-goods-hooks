{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","default","sortParameter","setSortParameter","visibleGoods","goods","copyGoods","reverse","sort","good1","good2","length","alphabet","localeCompare","getSortedGoods","handleSortClick","type","className","onClick","cn","prev","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0EAbQC,EAA4B,CACvC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,gBAAAA,E,oBAAAA,I,sBAAAA,M,KAqCE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA0CF,mBAASH,EAASM,SAA5D,mBAAOC,EAAP,KAAsBC,EAAtB,KAEMC,EAnCR,SACEC,EACAH,EACAH,GAEA,IAAMO,EAAS,YAAOD,GAuBtB,OArBIN,GACFO,EAAUC,UAGRL,GACFI,EAAUE,MAAK,SAACC,EAAOC,GACrB,OAAQR,GACN,KAAKP,EAASgB,OACZ,OAAOZ,EAAaW,EAAMC,OAASF,EAAME,OACrCF,EAAME,OAASD,EAAMC,OAE3B,KAAKhB,EAASiB,SACZ,OAAOb,EAAaW,EAAMG,cAAcJ,GACpCA,EAAMI,cAAcH,GAE1B,QACE,OAAOf,EAASM,YAKjBK,EAQHQ,CAAelB,EAAiBM,EAAeH,GAW7CgB,EAAkB,SAACC,GAAD,OAAoB,WAC1Cb,EAAiBa,KAGnB,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAASH,EAAgBpB,EAASiB,UAClCI,KAAK,SACLC,UAAWE,IAAG,iBAAkB,CAC9B,WAAYjB,IAAkBP,EAASiB,WAJ3C,iCAUA,wBACEM,QAASH,EAAgBpB,EAASgB,QAClCK,KAAK,SACLC,UAAWE,IAAG,oBAAqB,CACjC,WAAYjB,IAAkBP,EAASgB,SAJ3C,4BAUA,wBACEO,QAhCQ,WACdlB,GAAc,SAAAoB,GAAI,OAAKA,MAgCjBJ,KAAK,SACLC,UAAWE,IAAG,oBAAqB,CACjC,YAAapB,IAJjB,sBASEG,GAAiBH,IACjB,mCACE,wBACEmB,QAhDE,WACZf,EAAiBR,EAASM,SAC1BD,GAAc,IA+CJgB,KAAK,SACLC,UAAU,4BAHZ,wBAWN,6BACGb,EAAaiB,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YC1HjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a5909de8.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  length = 'length',\n  alphabet = 'alphabet',\n  default = 0,\n}\n\nfunction getSortedGoods(\n  goods: string[],\n  sortParameter: SortType,\n  isReversed: boolean,\n): string[] {\n  const copyGoods = [...goods];\n\n  if (isReversed) {\n    copyGoods.reverse();\n  }\n\n  if (sortParameter) {\n    copyGoods.sort((good1, good2) => {\n      switch (sortParameter) {\n        case SortType.length:\n          return isReversed ? good2.length - good1.length\n            : good1.length - good2.length;\n\n        case SortType.alphabet:\n          return isReversed ? good2.localeCompare(good1)\n            : good1.localeCompare(good2);\n\n        default:\n          return SortType.default;\n      }\n    });\n  }\n\n  return copyGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortParameter, setSortParameter] = useState(SortType.default);\n\n  const visibleGoods\n    = getSortedGoods(goodsFromServer, sortParameter, isReversed);\n\n  const reset = () => {\n    setSortParameter(SortType.default);\n    setIsReversed(false);\n  };\n\n  const reverse = () => {\n    setIsReversed(prev => !prev);\n  };\n\n  const handleSortClick = (type: SortType) => () => {\n    setSortParameter(type);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={handleSortClick(SortType.alphabet)}\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortParameter !== SortType.alphabet,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={handleSortClick(SortType.length)}\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortParameter !== SortType.length,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={reverse}\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !isReversed,\n          })}\n        >\n          Reverse\n        </button>\n        {(sortParameter || isReversed) && (\n          <>\n            <button\n              onClick={reset}\n              type=\"button\"\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          </>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}